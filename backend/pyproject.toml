[tool.poetry]
name = "cybershield-ironcore-backend"
version = "0.1.0"
description = "Enterprise AI-Powered Cyber Risk Management Platform - Backend Services"
authors = ["CyberShield Team <team@cybershield.ai>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
grpcio = "^1.59.0"
grpcio-tools = "^1.59.0"
sqlalchemy = "^2.0.23"
asyncpg = "^0.29.0"
alembic = "^1.12.1"
redis = "^5.0.1"
pydantic = {extras = ["email"], version = "^2.5.0"}
pydantic-settings = "^2.1.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
pyjwt = {extras = ["cryptography"], version = "^2.8.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
httpx = "^0.25.2"
aiofiles = "^23.2.1"
prometheus-client = "^0.19.0"
structlog = "^23.2.0"
tenacity = "^8.2.3"
celery = "^5.3.4"
tensorflow = "^2.15.0"
numpy = "^1.24.3"
pandas = "^2.1.4"
scikit-learn = "^1.3.2"
transformers = "^4.36.2"
torch = "^2.1.2"
kafka-python = "^2.0.2"
ldap3 = "^2.9.1"
pyotp = "^2.9.0"
qrcode = {extras = ["pil"], version = "^7.4.2"}
cryptography = "^41.0.7"
python-saml = "^1.15.0"
lxml = "^4.9.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
bandit = "^1.7.5"
pre-commit = "^3.6.0"
httpx = "^0.25.2"
pytest-mock = "^3.12.0"
factory-boy = "^3.3.0"

[tool.poetry.group.test.dependencies]
pytest-xdist = "^3.5.0"
pytest-benchmark = "^4.0.0"
coverage = "^7.3.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "kafka.*",
    "tensorflow.*",
    "transformers.*",
    "celery.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.bandit]
exclude_dirs = ["tests", "venv"]
skips = ["B101", "B601"]